"""
try и except

Синтаксис для обработки ошибок в Python - это команды try и except.
Код, который может вызвать исключение, помещается в блок try.
И обработка исключения реализуется в блоке except. Синтаксис следующий:

try:
   Здесь мы выполняем наши действия...
   ...
except ExceptionI:
   Если случается исключение ExceptionI, то выполняем этот блок.
except ExceptionII:
   Если случается исключение ExceptionII, то выполняем этот блок.
   ...
else:
   Если исключений нет, то выполняем этот блок.

Блок кода finally: выполняется всегда, вне зависимости от того,
возникало или нет какое-либо исключение в блоке try. Синтаксис следующий:

try:
   Блок кода
   ...
   В случае исключений, этот код может быть пропущен!
finally:
   Этот блок кода всегда выполняется.


"""

"""
Задача 1

Обработайте исключение, которое вызывает код ниже, с помощью блоков try и except.

for i in ['a','b','c']:
    print(i**2)

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-1-c35f41ad7311> in <module>()
      1 for i in ['a','b','c']:
----> 2     print(i**2)

TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
"""

for i in ['a', 'b', 'c']:
    try:
        print(i**2)
    except TypeError:
        print('Ошибка, тип полученных данных не подходит для данной операции!')

"""
Задача 2

Обработайте исключение, которое вызывает код ниже, с помощью блоков try и except. 
Затем используйте блок finally, чтобы сказать, что всё сделано.

x = 5
y = 0
z = x/y

---------------------------------------------------------------------------
ZeroDivisionError                         Traceback (most recent call last)
<ipython-input-2-6f985c4c80dd> in <module>()
      2 y = 0
      3 
----> 4 z = x/y

ZeroDivisionError: division by zero
"""

x = 5
y = 0
try:
    z = x/y
except ZeroDivisionError:
    print("Ошибка, деление на 0!")
finally:
    print("Выполнение кода завершено.")

"""
Задача 3

Напишите функцию, которая спрашивает пользователя ввести число, и затем 
выводит это число в квадрате. Используйте цикл while и блоки try, except и else 
для обработки некорректно введённых данных.

Введите число: null
Произошла ошибка! Попробуйте снова!
Введите число: 2
Спасибо! Квадрат числа:  4
"""


def ask():
    while True:
        try:
            a = int(input("Введите число: "))
        except ValueError:
            print("Произошла ошибка! Попробуйте снова!")
        else:
            print("Спасибо! Квадрат числа: " + str(a**2))


ask()
