"""
Тут будут интересные алгоритмы и красивые решения.
"""

# Рассчитываем и распечатываем ряд Фибоначи до числа n.
n = int(input())
f_1 = 0
f_2 = 1
for _ in range(n):
    f_2 = f_1 + f_2
    f_1 = f_2 - f_1
    print(f_1, end=' ')


"""
Подсчет кол-ва монет 25, 10, 5, 1 необходимых для оплаты суммы n.
"""

m = int(input())
counter = 0
divider = 25
i = 0
while m > 0:
    temp = m // divider
    counter += m // divider
    m -= temp * divider
    if i == 0:
        divider = 10
    elif i == 1:
        divider = 5
    elif i == 2:
        divider = 1
    i += 1
print(int(counter))


"""
Напишем программу, которая считывает натуральное число (целое положительное) и обрабатывает его цифры.
"""
n = int(input())
while n != 0:                         # пока в числе есть цифры
    last_digit = n % 10               # получить последнюю цифру
    n //= 10                          # Код обработки последней цифры. Удалить последнюю цифру из числа.


"""
Дано натуральное число. Напишите программу, которая меняет порядок цифр числа на обратный.
"""

n = int(input())
total = 1
while n != 0:
    last_digit = n % 10
    n //= 10
    print(last_digit, end='')


"""
Дано натуральное число. Напишите программу, которая вычисляет:

    Сумму его цифр;
    количество цифр в нем;
    произведение его цифр;
    среднее арифметическое его цифр;
    его первую цифру;
    сумму его первой и последней цифры.

"""

n = int(input())
a_0 = 0  # Сумма его цифр.
a_1 = 0  # количество цифр в нем.
a_2 = 1  # произведение его цифр.
a_3 = 0  # среднее арифметическое его цифр.
a_4 = 0  # его первая цифра.
a_5 = 0  # сумму его первой и последней цифры.
a_6 = n % 10  # Его последняя цифра.
while n != 0:
    last_digit = n % 10
    a_0 += last_digit
    a_1 += 1
    a_2 *= last_digit
    if n != 0:
        a_4 = last_digit
        a_5 = a_4 + a_6
    n //= 10
print(a_0, a_1, a_2, (a_0 / a_1), a_4, a_5, sep="\n")


"""
magic square магический квадрат.
Магическим квадратом порядка nn называется квадратная таблица размера n×nn×n, составленная из всех 
чисел 1,2,3,…,n**2 так, что суммы по каждому столбцу, каждой строке и каждой из двух диагоналей равны 
между собой. Напишите программу, которая проверяет, является ли заданная квадратная матрица магическим квадратом.

Формат входных данных
На вход программе подаётся натуральное число n — количество строк и столбцов в матрице, затем элементы 
матрицы: nn строк, по n чисел в каждой, разделённые пробелами.

Формат выходных данных
Программа должна вывести слово YES, если матрица является магическим квадратом, и слово NO в противном случае.
"""

n = int(input())
m = [[int(i) for i in input().split()] for j in range(n)]
summa = sum(m[0])
flag = 'YES'

# проверка вхождения элементов в диапазон от 1 до n.
test = [i for i in range(1, n ** 2 + 1)]
for i in range(n):
    for j in range(n):
        if m[i][j] in test:
            test.remove(m[i][j])
        if i == j == n - 1 and test != []:
            flag = 'NO'

# проверка сумм строк.
for i in range(1, n):
    if sum(m[i]) != summa:
        flag = 'NO'
        break

# проверка сумм столбцов.
for j in range(n):
    temp = 0
    for i in range(n):
        temp += m[i][j]
        if i == n - 1 and temp != summa:
            flag = 'NO'
            break

# проверка сумм диагоналей.
temp = 0
for j in range(n):
    for i in range(n):
        if i == j:
            temp += m[i][j]
if temp != summa:
    flag = 'NO'

print(flag)
>>>>>>> 51c6104 (Решал задачи на сайте - https://stepik.org)
